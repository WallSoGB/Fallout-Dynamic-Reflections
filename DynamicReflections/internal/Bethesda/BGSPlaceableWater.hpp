#pragma once

#include "TESBoundObject.hpp"
#include "TESModel.hpp"

class TESWaterForm;

class BGSPlaceableWater : public TESBoundObject {
public:
	enum WaterFlags {
		kWtrFlag_Reflects = 0x1,
		kWtrFlag_ReflectsActors = 0x2,
		kWtrFlag_ReflectsLand = 0x4,
		kWtrFlag_ReflectsLODLand = 0x8,
		kWtrFlag_ReflectsLODBuildings = 0x10,
		kWtrFlag_ReflectsLODTrees = 0x20,
		kWtrFlag_ReflectsSky = 0x40,
		kWtrFlag_ReflectsDynamicObjects = 0x80,
		kWtrFlag_ReflectsDeadBodies = 0x100,
		kWtrFlag_Refracts = 0x200,
		kWtrFlag_RefractsActors = 0x400,
		kWtrFlag_RefractsLand = 0x800,
		kWtrFlag_RefractsDeadBodies = 0x20000,
		kWtrFlag_RefractsDynamicObjects = 0x10000,
		kWtrFlag_SilhouetteReflections = 0x40000,
		kWtrFlag_Depth = 0x10000000,
		kWtrFlag_ObjectTextureCoords = 0x20000000,
		kWtrFlag_AutoGenerated = 0x40000000,
		kWtrFlag_NoUnderwaterFog = 0x80000000,
	};

	TESModel		model;
	UInt32			uiWaterFlags;
	TESWaterForm*	pWaterType;

	bool HasFlag(UInt32 auiFlag) const {
		return (uiWaterFlags & auiFlag) !=0;
	}

	bool HasReflection() const {
		return HasFlag(kWtrFlag_Reflects);
	}

	bool HasLandReflection() const {
		return HasFlag(kWtrFlag_ReflectsLand);
	}

	bool HasSkyReflection() const {
		return HasFlag(kWtrFlag_ReflectsSky);
	}

	bool HasLODLandReflection() const {
		return HasFlag(kWtrFlag_ReflectsLODLand);
	}

	bool HasLODBuildingReflection() const {
		return HasFlag(kWtrFlag_ReflectsLODBuildings);
	}

	bool HasLODTreeReflection() const {
		return HasFlag(kWtrFlag_ReflectsLODTrees);
	}

	bool HasLODReflection() const {
		return HasFlag(kWtrFlag_ReflectsLODLand) || HasFlag(kWtrFlag_ReflectsLODBuildings) || HasFlag(kWtrFlag_ReflectsLODTrees);
	}

	bool HasRefraction() const {
		return HasFlag(kWtrFlag_Refracts);
	}

	bool HasActorRefraction() const {
		return HasFlag(kWtrFlag_RefractsActors);
	}

	bool HasLandRefraction() const {
		return HasFlag(kWtrFlag_RefractsLand);
	}

	bool HasSilhouetteReflections() const {
		return HasFlag(kWtrFlag_SilhouetteReflections);
	}

	bool HasDepth() const {
		return HasFlag(kWtrFlag_Depth);
	}

	bool IsProceduralWater() const {
		return HasFlag(kWtrFlag_AutoGenerated);
	}
};

ASSERT_SIZE(BGSPlaceableWater, 0x50);